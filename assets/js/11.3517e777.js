(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{433:function(t,a,s){"use strict";s.r(a);var r=s(65),i=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"自动化构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动化构建"}},[t._v("#")]),t._v(" 自动化构建")]),t._v(" "),s("p",[t._v("常见的CI有下面几类")]),t._v(" "),s("ul",[s("li",[t._v("Travis CI")]),t._v(" "),s("li",[t._v("Circle CI")]),t._v(" "),s("li",[t._v("GitHub Action")])]),t._v(" "),s("h1",{attrs:{id:"git-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-actions"}},[t._v("#")]),t._v(" git Actions")]),t._v(" "),s("p",[t._v("上一节我们学习了如何将一个简单的静态页面打包部署到服务器上，这节我们就来看下这样存在的几个问题")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("在一般项目中，前端进行部署就是将打包之后的文件放到服务器的 nginx 目录下就可以了，但是这样每次有修改的时候，就需要我们手动重新进行打包，然后重新进行部署，有没有什么办法可以帮我们自动做这些事情呢，那就是 git Actions")]),t._v(" "),s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/cn/actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github Actions"),s("OutboundLink")],1),t._v(" 是一个持续集成和持续交付(CI/CD)平台，可以为我们的项目自动执行构建创建工作流，也可以在存储仓库中触发其他事件时候运行工作流，比如常见的代码检查，自动化打包，执行测试，发布版本等")]),t._v(" "),s("p",[t._v("下面我们介绍几个常用的概念")]),t._v(" "),s("p",[s("strong",[t._v("workflow")]),t._v(" 可以理解为一个执行任务的过程就是工作流")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("name")])]),t._v(" "),s("li",[s("p",[t._v("on")])]),t._v(" "),s("li",[s("p",[t._v("jobs")])]),t._v(" "),s("li"),t._v(" "),s("li")]),t._v(" "),s("h2",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("h2",{attrs:{id:"实现自己的-git-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现自己的-git-actions"}},[t._v("#")]),t._v(" 实现自己的 git Actions")])])}),[],!1,null,null,null);a.default=i.exports}}]);